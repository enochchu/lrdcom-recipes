#macro (clean_up $string)
	#set ($string = $stringUtil.replace($string, "[", ""))
	#set ($string = $stringUtil.replace($string, "]", ""))
	#set ($string = $stringUtil.replace($string, '"', ''))

	#if ($string == "_blank")
		#set ($string = "")
	#end
#end

#macro (get_tactic_info5 $tactic_id $map $map_string)
	#set ($record = $ddlRecordLocalService.fetchDDLRecord($getterUtil.getLong($tactic_id)))

	#if ($record)
		#foreach ($field_name in $hs_field_names)
			#set ($field_value = $record.getFieldValue($field_name))
			#clean_up($field_value)

			#if ($validator.isNotNull($field_value))
				#set ($VOID = $map.put($field_name, $htmlUtil.escape($field_value)))
			#end
		#end

		#set ($asset_record = $record.getFieldValue("asset"))
		#set ($asset_type = $record.getFieldValue("asset_type"))
		#clean_up($asset_type)

		#set ($asset_primary_buyers_stage = $record.getFieldValue("asset_primary_buyers_stage"))
		#clean_up($asset_primary_buyers_stage)

		#set ($asset = false)
		#set ($asset_id = $record.getFieldValue("asset_id"))
		#set ($asset_json_object = $jsonFactoryUtil.getNullJSON())
		#if ($stringUtil.startsWith($asset_record, "{") && $stringUtil.endsWith($asset_record, "}"))
			#set ($asset_json_object = $jsonFactoryUtil.createJSONObject($asset_record))
		#end
		#set ($asset_name = $record.getFieldValue("asset_name"))
		#set ($asset_url = $record.getFieldValue("asset_url"))
		#set ($dl_file_entry_local_service = $serviceLocator.findService("com.liferay.portlet.documentlibrary.service.DLFileEntryLocalService"))

		#if ($asset_json_object.getString("uuid"))
			#set ($asset_url = "${request.get('scheme')}://${request.get('theme-display').get('portal-url')}/documents/14/${asset_json_object.getString('uuid')}")
			#set ($asset = $dl_file_entry_local_service.getFileEntryByUuidAndGroupId($asset_json_object.getString("uuid"), 14))

			#if ($asset)
				#set ($asset_id = $asset.getUuid())
				#set ($asset_name = $asset.getTitle())
			#end
		#end

		#if ($validator.isNotNull($asset_name))
			#set ($VOID = $map.put("asset_name", $htmlUtil.escape($asset_name)))
		#end

		#if ($validator.isNotNull($asset_id))
			#set ($VOID = $map.put("asset_id", $htmlUtil.escape($asset_id)))
		#end

		#if ($validator.isNotNull($asset_url))
			#set ($VOID = $map.put("asset_url", $htmlUtil.escape($asset_url)))
		#end

		#if ($validator.isNotNull($asset_primary_buyers_stage))
			#set ($VOID = $map.put("asset_primary_buyers_stage", $htmlUtil.escape($asset_primary_buyers_stage)))
		#end

		#set ($VOID = $map.put("tactic_id", $record.getRecordId()))
	#end

	#set ($map_string = "{")

	#foreach ($key in $map.keySet())
		#if ($velocityCount != 1)
			#set ($map_string = "${map_string},")
		#end

		#set ($map_string = "${map_string}&#34;${key}&#34;:&#34;${map.get($key)}&#34;")
	#end

	#set ($map_string = "${map_string}}")
#end

#macro (get_options5 $field $options_map)
	#if ($localization_map)
		#set ($localized_field_name = "")
		#set ($localized_field_options = false)

		#set ($localized_field_name = "$field.getString('name')" + "_" + "$locale.toString().toLowerCase()")
		#set ($localized_field_options = $localization_map.get($localized_field_name).get("options"))

		#if ($localized_field_options)
			#set_options($localized_field_options, $options_map)
		#end
	#end

	#if ($options_map.isEmpty())
		#set_options($field.getJSONArray('options'), $options_map)
	#end
#end

#macro (set_options $options $options_map)
	#set ($options_start = 0)
	#set ($options_end = $options.length() - 1)
	#set ($options_range = [$start..$options_end])

	#foreach ($i in $options_range)
		#set ($option = $options.getJSONObject($i))
		#set ($order = $option.getInt('displayOrder') + 1000)
		#set ($VOID = $options_map.put("$order", $option))
	#end
#end

#set ($portlet_bean_locator = $portal.getClass().forName('com.liferay.portal.kernel.bean.PortletBeanLocatorUtil'))
#set ($hs_contact_local_service = $portlet_bean_locator.locate("hubspot-portlet", "com.liferay.hubspot.service.HSContactLocalService.velocity"))
#set ($hs_form_local_service = $portlet_bean_locator.locate("hubspot-portlet", "com.liferay.hubspot.service.HSFormLocalService.velocity"))

## Testing Hubspot Account
## #set ($hs_account_id = "299703")

## Production Hubspot Account
#set ($hs_account_id = "252686")

#if ($request.lifecycle == 'RENDER_PHASE')
	<style>
	@keyframes slide {
		from {
			top: -100%;
		}
		to {
			top: 8px;
		}
	}

	@-webkit-keyframes slide {
		from {
			top: -100%;
		}
		to {
			top: 8px;
		}
	}

	.hbspt-form .btn-wrapper {
		padding: 20px 0;
	}

	.hbspt-form .aui-field .aui-field-input {
		background-color: transparent;
		border: 1px solid #474A4B;
		color: #474A4B;
		display: inline-block;
		font-size: 1em;
		outline: none;
		padding: 5px 2.25%;
		height: 1.5em;
		width: 95%;

		-webkit-border-radius: 3px;
		-moz-border-radius: 3px;
		-ms-border-radius: 3px;
		-o-border-radius: 3px;
		border-radius: 3px;

		box-sizing: content-box;
	}

	.hbspt-form .aui-field .aui-field-input.aui-field-input-select {
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;
	}

	::-webkit-input-placeholder {
		color: #474A4B;
	}

	:-moz-placeholder {
		color: #474A4B;
	}

	::-moz-placeholder {
		color: #474A4B;
	}

	:-ms-input-placeholder {
		color: #474A4B;
	}

	.hbspt-form .aui-field-label, .hbspt-form .aui-form-validator-message {
		font-size: 12px;
		font-weight: normal;
		position: absolute;
		right: 10px;
		top: -100%;
		z-index: 0;

		-webkit-transition: top .5s;
		-moz-transition: top .5s;
		-ms-transition: top .5s;
		-o-transition: top .5s;
		transition: top .5s;
	}

	.hbspt-form .aui-field-select .aui-field-label, .hbspt-form .aui-field-text .aui-field-label, .hbspt-form .aui-field-textarea .aui-field-label, .hbspt-form .aui-form-validator-message {
		pointer-events: none;
	}

	.hbspt-form .aui-field-booleancheckbox .aui-field-label, .hbspt-form .booleancheckbox-field .aui-form-validator-message, .hbspt-form .aui-field-radio .aui-field-label, .hbspt-form .aui-field-checkbox .aui-field-label {
		position: static;
	}

	.hbspt-form .aui-form-validator-stack-error {
		font-size: inherit;
	}

	.hbspt-form .field-filled .aui-field-label, .hbspt-form .aui-form-validator-error-container .aui-form-validator-message {
		top: 8px;

		-webkit-animation: slide .5s;
		-moz-animation: slide .5s;
		-ms-animation: slide .5s;
		-o-animation: slide .5s;
		animation: slide .5s;
	}

	.hbspt-form .aui-field-select .aui-field-label, .hbspt-form .aui-field-select .aui-form-validator-message {
		right: 35px;
	}

	.hbspt-form .aui-field-select .aui-field-input {
		background: url(https://www.liferay.com/documents/14/43429917/arrow_down.png) no-repeat right;
		background-image: url(https://www.liferay.com/documents/14/43429917/arrow_down.svg);
	}

	.hbspt-form .aui-field-select.field-filled .aui-field-input {
		background-image: url(https://www.liferay.com/documents/14/43429917/arrow_down_selected.png);
		background-image: url(https://www.liferay.com/documents/14/43429917/arrow_down_selected.svg);
	}

	.hbspt-form .aui-field {
		font-weight: normal;
		max-width: 500px;
		margin-bottom: 1em;
		overflow: hidden;
		padding: 1px;
		position: relative;
	}

	.hbspt-form .aui-field-booleancheckbox .aui-field-label, .hbspt-form .aui-field-checkbox .aui-field-label {
		font-size: 1em;
		font-weight: lighter;
	}

	.hbspt-form .form-col .aui-field-richtext {
		font-size: 1.25em;
		margin: 1em 0 5px;
	}

	.hbspt-form .aui-form-validator-message {
		background: transparent;
		clip: auto;
		color: inherit;
		margin: 0;
		padding: 0;
		text-align: right;
		width: auto;
	}

	.hbspt-form .aui-field.aui-form-validator-error-container {
		color: #F5A11D;
	}

	.hbspt-form .aui-field.aui-form-validator-error-container .aui-field-input {
		border-color: #F5A11D;
	}

	.hbspt-form .aui-field.field-filled, .hbspt-form .aui-field.field-filled .aui-field-input {
		color: #909295;
	}

	.hbspt-form .aui-field.field-filled .aui-field-input {
		border-color: #909295;
	}

	.hbspt-form .aui-field.field-focused .aui-field-input {
		border-color: #1C75B9;
		color: #1C75B9;
	}

	.hbspt-form .aui-field-booleancheckbox .aui-field-input, .hbspt-form .input input[type="checkbox"], .hbspt-form .input input[type="radio"] {
		margin: 1px 5px 0 0;
		width: auto;
	}
	</style>

	## Create tree map with all the info pulled from the url

	#set ($ddlRecordLocalService = $serviceLocator.findService("com.liferay.portlet.dynamicdatalists.service.DDLRecordLocalService"))

	#set ($hs_field_names = ["asset_type","campaign","leadsource","lead_source_type","product_interest","program","tactic_name","video_type"])

	#set ($complete_url = $request.attributes.CURRENT_COMPLETE_URL)
	#set ($record_id = $httpUtil.getParameter($complete_url, "tactic_id", false))

	#set ($hs_url_map = $portal.getClass().forName("java.util.TreeMap").newInstance())
	#set ($hs_url_map_string = $portal.getClass().forName("java.util.TreeMap").newInstance())

	#set ($ip_geocoder_util = $portal.getClass().forName("com.liferay.ipgeocoder.util.IPGeocoderUtil"))
	#set ($ip_info = $ip_geocoder_util.getIPInfo($request.attributes.OSB_REMOTE_ADDRESS))
	#set ($country_from_ip = "")

	#if ($ip_info)
		#set ($country_from_ip = $ip_info.getCountryName())
	#end

	#if ($record_id != "")
		#get_tactic_info5($record_id, $hs_url_map, $hs_url_map_string)
	#end

	#set ($hs_default_map = $portal.getClass().forName("java.util.TreeMap").newInstance())
	#set ($hs_default_map_string = $portal.getClass().forName("java.util.TreeMap").newInstance())

	#if ($default_tactic_id && ($default_tactic_id.data != ""))
		#get_tactic_info5($default_tactic_id.data, $hs_default_map, $hs_default_map_string)
	#end

	#set ($number_of_fields_displayed = $getterUtil.getInteger($number_of_fields.data))

	#foreach ($key in $number_of_fields.override_key.siblings)
		#foreach ($value in $key.override_value.siblings)
			#if ($hs_url_map.get($key.data) == $value.data || $hs_default_map.get($key.data) == $value.data)
				#set ($number_of_fields_displayed = $getterUtil.getInteger($value.num_of_fields.data))
				#set ($fields_to_skip = $value.fields_to_skip.data)

				#set ($break = true)
				#break
			#end
		#end

		#if ($break)
			#break
		#end
	#end

	## Create a state to country map

	#set ($state_country_map = {"Armed Forces Americas": "United States","Armed Forces Europe": "United States","Alaska": "United States","Alabama": "United States","Armed Forces Pacific": "United States","Arkansas": "United States","American Samoa": "United States","Arizona": "United States","California": "United States","Colorado": "United States","Connecticut": "United States","District of Columbia": "United States","Delaware": "United States","Florida": "United States","Federated Micronesia": "United States","Georgia": "United States","Guam": "United States","Hawaii": "United States","Iowa": "United States","Idaho": "United States","Illinois": "United States","Indiana": "United States","Kansas": "United States","Kentucky": "United States","Louisiana": "United States","Massachusetts": "United States","Maryland": "United States","Maine": "United States","Marshall Islands": "United States","Michigan": "United States","Minnesota": "United States","Missouri": "United States","Northern Mariana Islands": "United States","Mississippi": "United States","Montana": "United States","North Carolina": "United States","North Dakota": "United States","Nebraska": "United States","New Hampshire": "United States","New Jersey": "United States","New Mexico": "United States","Nevada": "United States","New York": "United States","Ohio": "United States","Oklahoma": "United States","Oregon": "United States","Pennsylvania": "United States","Puerto Rico": "United States","Palau": "United States","Rhode Island": "United States","South Carolina": "United States","South Dakota": "United States","Tennessee": "United States","Texas": "United States","United States Minor Outlying Islands": "United States","Utah": "United States","Virginia": "United States","US Virgin Islands": "United States","Vermont": "United States","Washington": "United States","Wisconsin": "United States","West Virginia": "United States","Wyoming": "United States","Australian Capital Territory": "Australia","New South Wales": "Australia","Northern Territory": "Australia","Queensland": "Australia","South Australia": "Australia","Tasmania": "Australia","Victoria": "Australia","Western Australia": "Australia","Acre": "Brazil","Alagoas": "Brazil","Amazonas": "Brazil","Amapá": "Brazil","Bahia": "Brazil","Ceará": "Brazil","Distrito Federal": "Brazil","Espírito Santo": "Brazil","Goiás": "Brazil","Maranhão": "Brazil","Minas Gerais": "Brazil","Mato Grosso do Sul": "Brazil","Mato Grosso": "Brazil","Pará": "Brazil","Paraíba": "Brazil","Pernambuco": "Brazil","Piauí": "Brazil","Paraná": "Brazil","Rio de Janeiro": "Brazil","Rio Grande do Norte": "Brazil","Rondônia": "Brazil","Roraima": "Brazil","Rio Grande do Sul": "Brazil","Santa Catarina": "Brazil","Sergipe": "Brazil","São Paulo": "Brazil","Tocantins": "Brazil","Alberta": "Canada","British Columbia": "Canada","Manitoba": "Canada","New Brunswick": "Canada","Newfoundland and Labrador": "Canada","Nova Scotia": "Canada","Northwest Territories": "Canada","Nunavut": "Canada","Ontario": "Canada","Prince Edward Island": "Canada","Quebec": "Canada","Saskatchewan": "Canada","Yukon Territories": "Canada","Beijing": "China","Tianjin": "China","Hebei": "China","Shanxi": "China","Nei Mongol": "China","Liaoning": "China","Jilin": "China","Heilongjiang": "China","Shanghai": "China","Jiangsu": "China","Zhejiang": "China","Anhui": "China","Fujian": "China","Jiangxi": "China","Shandong": "China","Henan": "China","Hubei": "China","Hunan": "China","Guangdong": "China","Guangxi": "China","Hainan": "China","Chongqing": "China","Sichuan": "China","Guizhou": "China","Yunnan": "China","Xizang": "China","Shaanxi": "China","Gansu": "China","Qinghai": "China","Ningxia": "China","Xinjiang": "China","Chinese Taipei": "China","Hong Kong": "China","Macao": "China","Clare": "Ireland","Cavan": "Ireland","Cork": "Ireland","Carlow": "Ireland","Dublin": "Ireland","Donegal": "Ireland","Galway": "Ireland","Kildare": "Ireland","Kilkenny": "Ireland","Kerry": "Ireland","Longford": "Ireland","Louth": "Ireland","Limerick": "Ireland","Leitrim": "Ireland","Laois": "Ireland","Meath": "Ireland","Monaghan": "Ireland","Mayo": "Ireland","Offaly": "Ireland","Roscommon": "Ireland","Sligo": "Ireland","Tipperary": "Ireland","Waterford": "Ireland","Westmeath": "Ireland","Wicklow": "Ireland","Wexford": "Ireland","Andaman and Nicobar Islands": "India","Andhra Pradesh": "India","Arunachal Pradesh": "India","Assam": "India","Bihar": "India","Chandigarh": "India","Chhattisgarh": "India","Daman and Diu": "India","Delhi": "India","Dadra and Nagar Haveli": "India","Goa": "India","Gujarat": "India","Himachal Pradesh": "India","Haryana": "India","Jharkhand": "India","Jammu and Kashmir": "India","Karnataka": "India","Kerala": "India","Lakshadweep": "India","Maharashtra": "India","Meghalaya": "India","Manipur": "India","Madhya Pradesh": "India","Mizoram": "India","Nagaland": "India","Odisha": "India","Punjab": "India","Puducherry": "India","Rajasthan": "India","Sikkim": "India","Tamil Nadu": "India","Tripura": "India","Uttar Pradesh": "India","Uttarakhand": "India","West Bengal": "India","Agrigento": "Italy","Alessandria": "Italy","Ancona": "Italy","Aosta": "Italy","Ascoli Piceno": "Italy","L&#039;Aquila": "Italy","Arezzo": "Italy","Asti": "Italy","Avellino": "Italy","Bari": "Italy","Bergamo": "Italy","Biella": "Italy","Belluno": "Italy","Benevento": "Italy","Bologna": "Italy","Brindisi": "Italy","Brescia": "Italy","Barletta-Andria-Trani": "Italy","Bolzano": "Italy","Cagliari": "Italy","Campobasso": "Italy","Caserta": "Italy","Chieti": "Italy","Carbonia-Iglesias": "Italy","Caltanissetta": "Italy","Cuneo": "Italy","Como": "Italy","Cremona": "Italy","Cosenza": "Italy","Catania": "Italy","Catanzaro": "Italy","Enna": "Italy","Forlì-Cesena": "Italy","Ferrara": "Italy","Foggia": "Italy","Florence": "Italy","Fermo": "Italy","Frosinone": "Italy","Genoa": "Italy","Gorizia": "Italy","Grosseto": "Italy","Imperia": "Italy","Isernia": "Italy","Crotone": "Italy","Lecco": "Italy","Lecce": "Italy","Livorno": "Italy","Lodi": "Italy","Latina": "Italy","Lucca": "Italy","Monza and Brianza": "Italy","Macerata": "Italy","Messina": "Italy","Milan": "Italy","Mantua": "Italy","Modena": "Italy","Massa and Carrara": "Italy","Matera": "Italy","Naples": "Italy","Novara": "Italy","Nuoro": "Italy","Ogliastra": "Italy","Oristano": "Italy","Olbia-Tempio": "Italy","Palermo": "Italy","Piacenza": "Italy","Padua": "Italy","Pescara": "Italy","Perugia": "Italy","Pisa": "Italy","Pordenone": "Italy","Prato": "Italy","Parma": "Italy","Pistoia": "Italy","Pesaro and Urbino": "Italy","Pavia": "Italy","Potenza": "Italy","Ravenna": "Italy","Reggio Calabria": "Italy","Reggio Emilia": "Italy","Ragusa": "Italy","Rieti": "Italy","Rome": "Italy","Rimini": "Italy","Rovigo": "Italy","Salerno": "Italy","Siena": "Italy","Sondrio": "Italy","La Spezia": "Italy","Syracuse": "Italy","Sassari": "Italy","Savona": "Italy","Taranto": "Italy","Teramo": "Italy","Trento": "Italy","Turin": "Italy","Trapani": "Italy","Terni": "Italy","Trieste": "Italy","Treviso": "Italy","Udine": "Italy","Varese": "Italy","Verbano-Cusio-Ossola": "Italy","Vercelli": "Italy","Venice": "Italy","Vicenza": "Italy","Verona": "Italy","Medio Campidano": "Italy","Viterbo": "Italy","Vibo Valentia": "Italy","Aguascalientes": "Mexico","Baja California": "Mexico","Baja California Sur": "Mexico","Chihuahua": "Mexico","Colima": "Mexico","Campeche": "Mexico","Coahuila": "Mexico","Chiapas": "Mexico","Federal District": "Mexico","Durango": "Mexico","Guerrero": "Mexico","Guanajuato": "Mexico","Hidalgo": "Mexico","Jalisco": "Mexico","Mexico State": "Mexico","Michoacán": "Mexico","Morelos": "Mexico","Nayarit": "Mexico","Nuevo León": "Mexico","Oaxaca": "Mexico","Puebla": "Mexico","Querétaro": "Mexico","Quintana Roo": "Mexico","Sinaloa": "Mexico","San Luis Potosí": "Mexico","Sonora": "Mexico","Tabasco": "Mexico","Tlaxcala": "Mexico","Tamaulipas": "Mexico","Veracruz": "Mexico","Yucatán": "Mexico","Zacatecas": "Mexico"})

	## Generate Hubspot form

	#set ($article_namespace = "article${reserved-article-id.data}")

	#set ($namespace = $request.portlet-namespace)

	#set ($hsutk = $request.attributes.OSB_HUBSPOT_UTK)

	#if ($hsutk)
		#set ($hs_contact = $hs_contact_local_service.fetchHSContactByUserToken($hsutk))
	#end

	#if ($hs_contact)
		#set ($hs_contact_object = $hs_contact.getHSContactJSONObject().getJSONObject("properties"))
	#end

	#if ($locale != "en_US")
		## Testing Localization Form
		## #set ($localization_form = $hs_form_local_service.fetchHSFormByGUID("72293d1f-6e98-4655-a0f5-e57ac01a7060"))

		## Production Localization Form
		#set ($localization_form = $hs_form_local_service.fetchHSFormByGUID("6e0954fa-8f47-44a7-996d-e47c6f298f05"))

		#if ($localization_form.getHSFormJSONObject().getJSONArray("fields"))
			#set ($localization_form_fields = $localization_form.getHSFormJSONObject().getJSONArray("fields"))
			#set ($localization_map = $portal.getClass().forName("java.util.TreeMap").newInstance())

			#set ($localization_form_start = 0)
			#set ($localization_form_end = $localization_form_fields.length() - 1)
			#set ($localization_form_range = [$localization_form_start..$localization_form_end])

			#foreach ($i in $localization_form_range)
				#set ($localization_form_field = $localization_form_fields.getJSONObject($i))

				#set ($field_map = $portal.getClass().forName("java.util.TreeMap").newInstance())

				#set ($VOID = $field_map.put("label", $localization_form_field.getString("label")))
				#set ($VOID = $field_map.put("options", $localization_form_field.getJSONArray("options")))

				#set ($VOID = $localization_map.put($localization_form_field.getString("name"), $field_map))
			#end
		#end
	#end

	#set ($hs_form = $hs_form_local_service.fetchHSFormByGUID($hs_form_id.data))

	#set ($submit_params = "'#${article_namespace}fm'")

	#if ($record_id != "")
		#set ($submit_params = "${submit_params}, this.getAttribute('data-tactic-url-fields')")
	#end

	#set ($submit_params = "${submit_params}, this.getAttribute('data-tactic-item-fields')")

	#if ($hs_form)
		#set ($hs_form_fields = $hs_form.getHSFormJSONObject().getJSONArray("fields"))
		#set ($form_rules_json = $jsonFactoryUtil.createJSONObject())

		#set ($article_field_names_json = $jsonFactoryUtil.createJSONObject())
		#set ($form_field_strings_json = $jsonFactoryUtil.createJSONObject())

		#foreach ($name in $field_name.siblings)
			#set ($article_field_values_json = $jsonFactoryUtil.createJSONObject())

			#if ($name.label.data != "")
				#set ($void = $article_field_values_json.put("label", $name.label.data))
				#set ($void = $article_field_values_json.put("description", $name.description.data))

				#set ($void = $article_field_names_json.put($name.data, $article_field_values_json))
			#end

			#if ($name.required_message.data != "")
				#set ($form_field_string = $jsonFactoryUtil.createJSONObject())
				#set ($void = $form_field_string.put("required", $name.required_message.data))
				#set ($void = $form_field_strings_json.put($name.data, $form_field_string))
			#end
		#end

		<div class="hbspt-form">
			<div id="${article_namespace}msg"></div>

			<form action="https://forms.hubspot.com/uploads/form/v2/${hs_account_id}/${hs_form_id.data}" data-asset-new-tab="true" data-tactic-url-fields="${hs_url_map_string}" data-tactic-item-fields='${hs_default_map_string}' id="${article_namespace}fm" method="POST" onsubmit="submitHSForm${reserved-article-id.data}($submit_params); return false;">
				#set ($field_count = 0)
				#set ($start = 0)
				#set ($end = $hs_form_fields.length() - 1)
				#set ($range = [$start..$end])

				<div class="form-col form-col-1">
					#foreach ($i in $range)
						#set ($item = $hs_form_fields.getJSONObject($i))

						#set ($label_text = "")
						#set ($field_description = "")

						#if ($article_field_names_json.has($item.getString("name")))
							#set ($article_field_name_value = $article_field_names_json.getJSONObject($item.getString("name")))

							#set ($label_text = $article_field_name_value.getString("label"))
							#set ($field_description = $article_field_name_value.getString("description"))
						#end

						#if ($label_text == "")
							#set ($label_text = $item.getString("label"))
						#end

						#if ($field_description == "")
							#set ($field_description = $item.getString("description"))
						#end

						#set ($hidden = $getterUtil.getBoolean($item.getString("hidden")))
						#set ($hs_smart_field = $getterUtil.getBoolean($item.getString("isSmartField")))
						#set ($hs_value = "")
						#set ($required = "")
						#set ($value = "")

						#set ($field_type = $item.getString("fieldType"))

						#if ($item.getString("defaultValue"))
							#set ($value = $item.getString("defaultValue"))
						#end

						#if ($item.getJSONArray("selectedOptions"))
							#set ($value = $item.getJSONArray("selectedOptions").toString())
							#clean_up($value)

							#if ($hidden && $field_type == "checkbox")
								#set ($value = $stringUtil.replace($value, ",", ";"))

								#if ($hs_contact_object && $hs_contact_object.getJSONObject("$item.getString('name')"))
									#set ($hs_value = $hs_contact_object.getJSONObject("$item.getString('name')").getString("value"))

									#if ($hs_value.contains($value))
										#set ($value = $hs_value)
									#else
										#set ($value = "${value};${hs_value}")
									#end
								#end
							#end
						#end

						#if (!$hidden && $hs_contact_object && $hs_contact_object.getJSONObject("$item.getString('name')"))
							#set ($hs_value = $hs_contact_object.getJSONObject("$item.getString('name')").getString("value"))
							#set ($value = $hs_value)
						#end

						#set ($field_css_class = "aui-field aui-field-${field_type}")
						#set ($field_input_css_class = "aui-field-input aui-field-input-${field_type}")

						#if ($value != "")
							#set ($field_css_class = "$field_css_class field-filled")
						#end

						#if ($hidden || ($hs_smart_field && ($hs_value != "")))
							#set ($field_css_class = "$field_css_class aui-helper-hidden")
							#set ($field_input_css_class = "$field_input_css_class hidden-field")
						#elseif ($fields_to_skip.contains($item.getString("name")))
							##skip
						#else
							#set ($field_count = $field_count + 1)
						#end

						#set ($field_css_class = "$field_css_class field-${field_count}")

						#if ($item.getString("required") == "true")
							#set ($field_css_class = "$field_css_class field-required")
							#set ($field_input_css_class = "$field_input_css_class aui-field-required")
							#set ($required = "")
							#set ($label_text = "$label_text *")

							#set ($form_rule = $jsonFactoryUtil.createJSONObject())
							#set ($void = $form_rule.put("required", true))
							#set ($void = $form_rules_json.put($item.getString("name"), $form_rule))
						#end

						#if ($item.getString("name") == "state")
							#set ($field_css_class = "aui-helper-hidden $field_css_class state")
						#end

						#if ((($number_of_fields_displayed != 0) && ($field_count > $number_of_fields_displayed) && !$hidden) || ($hs_smart_field && ($value != "")) || $fields_to_skip.contains($item.getString("name")))
							##skip
						#else
							<div class="$field_css_class" id="article${reserved-article-id.data}field$i">
								#if ($label_text != "" && ($field_type != "richtext") && ($field_type != "booleancheckbox"))
									<label class="aui-field-label" for="$item.getString('name')">$label_text</label>
								#end

								#if ($hidden)
									#if ($hs_url_map.get($item.getString("name")))
										#set ($value = $hs_url_map.get($item.getString("name")))
									#end

									<input class="${field_input_css_class}" type="hidden" name="$item.getString('name')" value="$value"/>
								#elseif ($field_type == "select")
									#if ($item.getString("name") !="state")
										#set ($select_options_map = $portal.getClass().forName("java.util.TreeMap").newInstance())

										#get_options5($item, $select_options_map)

										<select class="${field_input_css_class}" id="${item.getString('name')}-$reserved-article-id.data" name="$item.getString('name')" $required>
											<option value="">$label_text</option>

											#foreach ($option in $select_options_map)
												#set ($selected = "")

												#if ($value == $option.getString('value') || (($item.getString("name") == "country") && ($option.getString('value') == $country_from_ip)))
													#set ($selected = "selected")
												#end

												<option value="$option.getString('value')" $selected>$option.getString('label')</option>
											#end
										</select>
									#end
								#elseif ($field_type == "richtext")
									<span class="hs-richtext">$item.getString('defaultValue')</span>
								#elseif ($field_type == "textarea")
									<textarea class="${field_input_css_class}" id="${item.getString('name')}-$reserved-article-id.data" name="$item.getString('name')" placeholder="$label_text" $required>$htmlUtil.escape($value)</textarea>
								#elseif ($field_type == "booleancheckbox")
									<label class="aui-field-label">
										<input class="${field_input_css_class}" name="$item.getString('name')" type="checkbox" value="false" />$label_text
									</label>
								#elseif ($field_type == "checkbox" || $field_type == "radio")
									#set ($checkbox_options_map = $portal.getClass().forName("java.util.TreeMap").newInstance())

									#get_options5($item, $checkbox_options_map)

									<div class="input">
										#foreach ($option in $checkbox_options_map)
											#if ($value.contains($option.getString("value")))
												#set ($checked = "checked")
											#else
												#set ($checked = "")
											#end

											<label class="aui-field-label">
												<input class="${field_input_css_class}" $checked name="$item.getString('name')" type="$field_type" value="$option.getString('value')" />$option.getString("label")
											</label>
										#end
									</div>
								#else
									<input
										class="${field_input_css_class}"
										id="${item.getString('name')}-$reserved-article-id.data"
										name="$item.getString('name')"
										placeholder="$label_text"

										#if ($item.getString("name") == "email")
											type="email"
										#else
											type="$field_type"
										#end

										#if ($item.getString('placeholder') != "")
											placeholder="$item.getString('placeholder')"
										#end

										$required

										value="$htmlUtil.escape($value)"
									/>
								#end

								#if ($field_description != "")
									<div class="aui-field-desc">$field_description</div>
								#end
							</div>

							#if ($item.getString("name") == "country")
								##Testing State Form
								##set ($state_form = $hs_form_local_service.fetchHSFormByGUID("98cf56eb-d66e-4fde-b3e0-981bae5d474e"))

								## Production State Form
								#set ($state_form = $hs_form_local_service.fetchHSFormByGUID("72116a27-2e29-4421-a069-2f981a8188e2"))

								#set ($state_form_fields = $state_form.getHSFormJSONObject().getJSONArray("fields"))

								#if ($state_form_fields)
									#set ($state_form_field = $state_form_fields.getJSONObject(0))

									#if ($state_form_field.getString("name") == "state")
										#set ($states_options_json = $jsonFactoryUtil.createJSONObject())

										#set ($state_options_map = $portal.getClass().forName("java.util.TreeMap").newInstance())

										#get_options5($state_form_field, $state_options_map)

										<div class="aui-field aui-field-select">
											<label class="aui-field-label" for="state">State</label>
											<select class="${field_input_css_class}" id="state-generated" name="state">
												<option value="null">State/Province *</option>

												#foreach ($option in $state_options_map)
													#set ($country_name = "other")
													#set ($option_value = $htmlUtil.escape($option.getString("value")))
													#set ($country_name = $state_country_map.get($option_value))

													#if (!$states_options_json.has($country_name))
														#set ($void = $states_options_json.put($country_name, $jsonFactoryUtil.createJSONObject()))
													#end

													#if ($hs_contact_object.getJSONObject("state").getString("value") == $option_value)
														#set ($void = $states_options_json.put("selected_option", $option_value))
													#end

													#set ($state_option_json = $states_options_json.getJSONObject($country_name))

													#set ($void = $state_option_json.put($option_value, $htmlUtil.escape($option.getString("label"))))

													#if (!$state_option_json.has("key"))
														#set ($void = $state_option_json.put("key", $jsonFactoryUtil.createJSONArray()))
													#end

													#set ($void = $state_option_json.getJSONArray("key").put($option_value))
												#end

												#if ($item.getString("unselectedLabel") != "")
													#set ($void = $states_options_json.put("unselected_label", "State/Province *"))
												#end
											</select>
										</div>
									#end
								#end

							#end

							#if (($field_count == $number_of_fields_first_col.data) && !$hidden)
				</div>

				<div class="form-col form-col-2">
							#end
						#end
					#end

					#set ($btn_text = $submit_text.data)

					#if ($btn_text == "")
						#set ($btn_text = $hs_form.getSubmitText())
					#end

					<div class="btn-wrapper">
						<input class="aui-button-input aui-button-input-submit btn" type="submit" value="$btn_text" />
					</div>
				</div>
			</form>
		</div>
	#end

	#set ($ip_address = $request.attributes.OSB_REMOTE_ADDRESS)
	#set ($page_url = $request.attributes.FRIENDLY_URL)
	#set ($page_name = "")

	#set ($redirect_asset_url = "")

	#if ($hs_url_map.get('asset_url'))
		#set ($redirect_asset_url = $hs_url_map.get('asset_url'))
	#end

	#set ($redirect_url = "")

	#if ($hs_form.getRedirect())
		#set ($redirect_url = $hs_form.getRedirect())
	#end

	#set ($salesforce_campaign_id = "")

	#if ($hs_url_map.get('campaign_id'))
		#set ($salesforce_campaign_id = $hs_url_map.get('campaign_id'))
	#elseif ($hs_form.getHSFormJSONObject().getJSONArray("metaData").getJSONObject(0).getString("value"))
		#set ($salesforce_campaign_id = $hs_form.getHSFormJSONObject().getJSONArray("metaData").getJSONObject(0).getString("value"))
	#end

	<script type="text/javascript">
		function submitHSForm${reserved-article-id.data}(formId, primaryTacticFields, secondaryTacticFields) {
			AUI().ready(
				'aui-base',
				'aui-io-plugin',
				'aui-io-request',
				'json-parse',
				function(A) {
					var form = A.one(formId);
					var msg = A.one('#${article_namespace}msg');

					if (!form) {
						return;
					}

					var fields = {};

					if (primaryTacticFields && (primaryTacticFields != "")) {
						fields = A.JSON.parse(primaryTacticFields);
					}

					var leave = false;

					form.all('.aui-field-input').each(
						function(node) {
							var value = node.get('value');

							if (node.hasClass('aui-field-input-booleancheckbox') && (node.get('checked') == true)) {
								value = true;
							}

							if ((node.hasClass('aui-field-required') && value == '') || (node.hasClass('aui-field-required') && value == 'false')) {
								leave = true;

								return;
							}

							if (!node.hasClass('hidden-field') && (node.hasClass('aui-field-input-booleancheckbox') || node.hasClass('aui-field-input-checkbox') || node.hasClass('aui-field-input-radio'))) {
								if (node.get('checked') == true) {
									if (fields[node.get('name')]) {
										fields[node.get('name')] += ',' + value;
									}
									else {
										fields[node.get('name')] = value;
									}
								}
							}
							else if (value != '') {
								fields[node.get('name')] = value;
							}
						}
					);

					if (leave) {
						return;
					}

					if (secondaryTacticFields) {
						secondaryTacticFields = A.JSON.parse(secondaryTacticFields);

						if (secondaryTacticFields["asset_id"]) {
							fields["asset_id"] = secondaryTacticFields["asset_id"];
						}
						if (secondaryTacticFields["asset_name"]) {
							fields["asset_name"] = secondaryTacticFields["asset_name"];
						}
						if (secondaryTacticFields["asset_type"]) {
							fields["asset_type"] = secondaryTacticFields["asset_type"];
						}
						if (secondaryTacticFields["asset_url"]) {
							fields["asset_url"] = secondaryTacticFields["asset_url"];
						}
					}

					var fieldsString = "";

					for(field in fields) {
						fieldsString = fieldsString + field + ':;:' + fields[field] + ':;:';
					}

					var guid = '$hs_form_id.data';
					var ipAddress = '$ip_address';
					var pageURL = '$page_url';
					var pageName = document.title;
					var redirectAssetURL = '$redirect_asset_url';

					if (fields["asset_url"]) {
						redirectAssetURL = fields["asset_url"];
					}

					var redirectURL = '$redirect_url';
					var salesforceCampaignId = '$salesforce_campaign_id';

					if (fields["campaign"]) {
						salesforceCampaignId = fields["campaign"];
					}

					var userToken = '$hsutk';

					if ((redirectAssetURL != "") && (form.getAttribute('data-asset-new-tab') == "true")) {
						window.open(redirectAssetURL, '_blank');
					}

					if (fields["asset_primary_buyers_stage"]) {
						var assetPrimaryBuyersStage = fields["asset_primary_buyers_stage"];

						if (assetPrimaryBuyersStage == "Awareness") {
							var trackEventId = "000000245927";
						}
						else if (assetPrimaryBuyersStage == "Education") {
							var trackEventId = "000000245928";
						}
						else if (assetPrimaryBuyersStage == "Evaluation") {
							var trackEventId = "000000245929";
						}
						else if (assetPrimaryBuyersStage == "Justification") {
							var trackEventId = "000000245931";
						}

						try {
							_hsq.push(
								[
									"trackEvent", {
										id: trackEventId,
										value: null
									}
								]
							);
						}
						catch (error) {
							console.log('_hsq error caught');
						}
					}

					A.io.request(
						'${request.resource-url}',
						{
							data: {
								${namespace}fields: fieldsString,
								${namespace}guid: guid,
								${namespace}ipAddress: ipAddress,
								${namespace}pageURL: pageURL,
								${namespace}pageName: pageName,
								${namespace}redirectURL: redirectURL,
								${namespace}salesforceCampaignId: salesforceCampaignId,
								${namespace}userToken: userToken
							},
							dataType: 'json',
							on: {
								success: function(event, id, obj) {
									#if ($on_success_js && ($on_success_js.data != ""))
										$on_success_js.data
									#else
										if (redirectURL != "") {
											window.location.href = redirectURL;
										}
										else {
											msg.setContent('<div class="portlet-msg-success">Your request completed successfully.</div><p class="thank-you-msg">$thank_you_text.getData()</p>');

											form.hide();
										}
									#end
								},
								failure: function(event, id, obj) {
									msg.setContent('<div class="portlet-msg-error">Your request failed to complete.</div>');
								}
							}
						}
					);
				}
			);
		};

		AUI().ready(
			'aui-base',
			'aui-form-validator',
			'json-parse',
			function(A) {
				new A.FormValidator(
					{
						boundingBox: '#${article_namespace}fm',
						fieldContainer: '.aui-field',
						fieldStrings: A.JSON.parse('$form_field_strings_json'),
						rules: A.JSON.parse('$form_rules_json')
					}
				);

				A.all('#${article_namespace}fm .aui-field').each(
					function(node) {
						node.on(
							'focus',
							function() {
								node.addClass('field-focused');
							}
						);

						node.on(
							'blur',
							function() {
								node.removeClass('field-focused');

								if (node.one('.aui-field-input').get('value') != "") {
									node.addClass('field-filled');
								}
								else {
									node.removeClass('field-filled');
								}
							}
						);
					}
				);

				var countrySelect = A.one('#country-$reserved-article-id.data');
				var stateSelect = A.one('#state-generated');

				if (stateSelect) {
					var stateWrapper = stateSelect.ancestor('.aui-field');
				}

				#if ($states_options_json)
					var stateJSON = A.JSON.parse('$states_options_json');
				#end

				if (!countrySelect || !stateSelect || !stateWrapper || !stateJSON) {
					return;
				}

				var populateStateField = function() {
					var stateOptions = stateJSON[countrySelect.val()];

					stateSelect.empty();

					if (stateOptions) {
						if (stateJSON['unselected_label']) {
							stateSelect.appendChild('<option value="null">' + stateJSON['unselected_label'] + '</option>');
						}

						var keyArray = stateOptions['key'];

						for (var key in keyArray) {
							var stateValue = keyArray[key];
							var selected = '';

							if (stateValue == stateJSON['selected_option']) {
								selected = 'selected';
							}

							stateSelect.appendChild('<option value="' + stateValue + '"' + selected + '>' + stateOptions[stateValue] + '</option>');
						}

						stateWrapper.removeClass('aui-helper-hidden');
					}
					else {
						stateWrapper.addClass('aui-helper-hidden');

						stateSelect.appendChild('<option value="null">State/Province *</option>');
					}
				};

				populateStateField();

				countrySelect.on('change', populateStateField);
			}
		);
	</script>
#elseif ($request.lifecycle == 'RESOURCE_PHASE')
	#set ($fields = $stringUtil.split($request.parameters.fields, ":;:"))

	#set ($guid = $request.parameters.guid)
	#set ($ipAddress = $request.parameters.ipAddress)
	#set ($pageURL = $request.parameters.pageURL)
	#set ($pageName = $request.parameters.pageName)
	#set ($redirectURL = $request.parameters.redirectURL)
	#set ($salesforceCampaignId = $request.parameters.salesforceCampaignId)
	#set ($userToken = $request.parameters.userToken)

	#set ($VOID = $hs_form_local_service.submitHSForm($guid, $userToken, $ipAddress, $pageURL, $pageName, $redirectURL, $salesforceCampaignId, $fields))
#end